% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CARD_process.R
\name{CARD_extraction}
\alias{CARD_extraction}
\title{CARD_extraction}
\usage{
CARD_extraction(
  data,
  CARD_name = c("QA", "QJXA"),
  CARD_path = NULL,
  period_default = NULL,
  suffix = NULL,
  suffix_delimiter = "_",
  cancel_lim = FALSE,
  simplify = FALSE,
  expand_overwrite = NULL,
  sampling_period_overwrite = NULL,
  rmNApct = TRUE,
  rm_duplicates = FALSE,
  extract_only_metadata = FALSE,
  dev = FALSE,
  verbose = FALSE
)
}
\arguments{
\item{data}{Input data format is a \link[tibble:tibble]{tibble} from the tibble package. It needs to have :
\itemize{
\item Only one column of \link[base:Dates]{Date} that are regularly spaced and unique for each time serie.
\item If there is more than one time serie, at least one column needs to be of \link[base:character]{character} string for names of time series in order to identify them. If more than one column of identifier is given, they will all be used in order to identify a unique time serie.
\item At least one column of \link[base:numeric]{numeric} (or \link[base:logical]{logical}) on which the process of variable extraction will be perform. More numerical column can be leave but if they are useless, they will be suppressed.
}

e.g.

\if{html}{\out{<div class="sourceCode">}}\preformatted{> data
A tibble: 201 Ã— 4
   time         Q_obs  Q_sim  ID
   <date>       <dbl>  <dbl>  <chr>
1   2000-02-10   10     97.8  serie 1
2   2000-02-11   19    -20.5  serie 1
3   2000-02-12   13    -76.9  serie 1
4   2000-02-13   15    -86.0  serie 1
    ...
103 2001-01-01  1.3     1988  serie 2
104 2001-01-02  1.2      109  serie 2
105 2001-01-03  1.0       90  serie 2
106 2001-01-04  1.1       91  serie 2
    ...
}\if{html}{\out{</div>}}}

\item{CARD_name}{A \link[base:c]{vector} of \link[base:character]{character} strings to specify which variables you want to extract. See \code{\link[=CARD_list_all]{CARD_list_all()}} to get the variable names. By default, \code{c("QA", "QJXA")}. If \code{NULL}, all the variable will be extracted, so avoid this value except with \code{extract_only_metadata = TRUE} or your custom \code{CARD_path} directory.}

\item{CARD_path}{An optional \link[base:character]{character} string for the path where to search for custom CARDs that have been created by the \link{CARD_management} function. By default, \code{NULL} in order to get the default CARD variable parameters.}

\item{period_default}{A \link[base:c]{vector} of two \link[base:Dates]{dates} (or two unambiguous \link[base:character]{character} strings that can be coerced to \link[base:Dates]{dates}) to restrict the period of analysis. As an example, it can be \code{c("1950-01-01", "2020-12-31")} to select data from the 1st January of 1950 to the end of December of 2020. Some CARD can have a specific \code{period} parameter that overide this \code{period_default} argument. The default option is \code{period_default=NULL}, which considers all available data for each time serie.}

\item{suffix}{A \link[base:character]{character} string \link[base:c]{vector} representing suffixes to be appended to the column names of the extracted variables. This parameter allows handling multiple extraction scenarios. For example, a cumbersome case can be to have a unique function to apply to a multiple list of column. It is possible to give \code{funct=list(QA_obs=mean, QA_sim=mean)} and \code{funct_args=list(list("Q_obs", na.rm=TRUE), list("Q_sim", na.rm=TRUE))} or simply \code{funct=list(QA=mean)} and \code{funct_args=list("Q", na.rm=TRUE)} with \code{suffix=c("obs", "sim")}. The two approach give the same result. Default \code{NULL}.}

\item{suffix_delimiter}{\link[base:character]{character} string specifies the delimiter to use between the variable name and the suffix if not \code{NULL}. The default is \code{"_"}.}

\item{cancel_lim}{A \link[base:logical]{logical} to specify whether to cancel the NA percentage limits in the CARDs. Default is \code{FALSE}.}

\item{simplify}{A \link[base:logical]{logical} to specify whether to simplify the extracted data by joining each \link[tibble:tibble]{tibble} extracted from each CARDs. Usefull when the extracted variable has no temporal extension. Default \code{"FALSE"}.}

\item{expand_overwrite}{\link[base:logical]{logical} or \code{NULL}. If \code{TRUE}, expand the output \link[tibble:tibble]{tibble} as a \link[base:list]{list} of \link[tibble:tibble]{tibble} for each extracted variable by \code{suffix}.
Default \code{NULL} to conserve the value specified in the CARDs used.}

\item{sampling_period_overwrite}{A \link[base:character]{character} string or a \link[base:c]{vector} of two \link[base:character]{character} strings that will indicate how to sample the data for each time step defined by \code{time_step}. Hence, the choice of this argument needs to be link with the choice of the time step. For example, for a yearly extraction so if \code{time_step} is set to \code{"year"}, \code{sampling_period} needs to be formated as \verb{\%m-\%d} (a month - a day of the year) in order to indicate the start of the sampling of data for the current year. More precisly, if \code{time_step="year"} and \code{sampling_period="03-19"}, \code{funct} will be apply on every data from the 3rd march of each year to the 2nd march of the following one. In this way, it is possible to create a sub-year sampling with a \link[base:c]{vector} of two \link[base:character]{character} strings as \code{sampling_period=c("02-01", "07-31")} in order to process data only if the date is between the 1st february and the 31th jully of each year.
\emph{not available for now} For a monthly (or seasonal) extraction, \code{sampling_period} needs to give only day in each month, so for example \code{sampling_period="10"} to extract data from the 10th of each month to the 9th of each following month.
Default \code{NULL} to conserve the value specified in the CARDs used.}

\item{rmNApct}{\link[base:logical]{logical}. Should the \code{NApct} column, which shows the percentage of missing values in the output, be removed ? Default \code{TRUE}.}

\item{rm_duplicates}{\link[base:logical]{logical}. Should duplicate time series values be automatically removed ? Default \code{FALSE}.}

\item{extract_only_metadata}{\link[base:logical]{logical}. If TRUE, only metadata of CARD will be extracted. In that case, use \code{data=NULL}. Default FALSE.}

\item{dev}{\link[base:logical]{logical} If \code{TRUE}, development mode is enabled. Default is \code{FALSE}.}

\item{verbose}{\link[base:logical]{logical}. Should intermediate messages be printed during the execution of the function ? Default \code{FALSE}.}
}
\value{
A \link[base:list]{list} of two \link[tibble:tibble]{tibbles}.
\itemize{
\item The \code{dataEX} \link[tibble:tibble]{tibble}, which contains the extracted variable, or a named \link[base:list]{list} of \link[tibble:tibble]{tibbles} for each extracted variable if \code{expand_overwrite} is \code{TRUE}.
\item The \code{metaEX} \link[tibble:tibble]{tibble}, which contains the metadata of the extraction from CARDs.
}
}
\description{
Extracts variables from time series (for example, the yearly mean of a time series) using CARD parameterization files.
}
\examples{
library(CARD)

# Get all the available variables
metaEX_all = CARD_list_all()
metaEX_all

# Create mock data
Start = as.Date("2001-03-02")
End = as.Date("2024-11-30")
Date = seq.Date(Start, End, by="day")
data = dplyr::tibble(time=Date,
                     Q=as.numeric(Date),
                     id="serie 1")

# Do a direct extraction
res = CARD_extraction(data, CARD_name=c("QA", "QMNA"), verbose=TRUE)
res

# Or find the closest CARD variable that interests you
CARD_management(CARD_name=c("VCN10-5"),
                CARD_path="CARD-WIP",
                overwrite=TRUE)
# Personalise it in the created  `"CARD-WIP"` directory (for example change the return period)
# And perform a custom extraction
res = CARD_extraction(data, CARD_name=NULL,
                      CARD_path="CARD-WIP",
                      verbose=TRUE)
res$dataEX
}
\seealso{
\enumerate{
\item \code{\link[=CARD_list_all]{CARD_list_all()}} list all available CARD.
\item \code{\link[=CARD_management]{CARD_management()}} for managing CARD parameterization files.
}
\itemize{
\item 
\enumerate{
\item \code{\link[=CARD_extraction]{CARD_extraction()}} for extracting variables using CARD.
}
}
}
